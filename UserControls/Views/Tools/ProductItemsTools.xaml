<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tools="clr-namespace:UserControls.ViewModels.Tools"
                    xmlns:controls="clr-namespace:UserControls.Controls"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:behaviors="clr-namespace:ES.Common.Behaviors;assembly=ES.Common">

    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />

    <DataTemplate DataType="{x:Type tools:ProductItemsToolsViewModel}">
        <Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Stretch">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Width" Value="Auto"/>
                        </Style>
                    </StackPanel.Resources>
                    <ComboBox ItemsSource="{Binding ProductsViewModes}" DisplayMemberPath="DisplayName" SelectedItem="{Binding CurrentProductsViewMode}" Margin="3"/>
                    <Button VerticalAlignment="Top" 
                        HorizontalAlignment="Right" 
                        Background="Transparent" BorderBrush="Transparent"
                        IsTabStop="False"
                        Focusable="False"
                        Command="{Binding UpdateProductsCommand}"
                        ToolTip="Թարմացնել">
                        <Image Height="16" Width="16" Source="pack://application:,,,/Shared;component/Images/Refresh_Dark.png"/>
                    </Button>
                    <Button VerticalAlignment="Top" 
                        HorizontalAlignment="Right" 
                        Background="Transparent" BorderBrush="Transparent"
                        IsTabStop="False"
                        Focusable="False"
                        Command="{Binding EditProductCommand}"
                        ToolTip="Խմբագրել">
                        <Image Height="16" Width="16" Source="pack://application:,,,/Shared;component/Images/Edit.ico"/>
                    </Button>
                </StackPanel>
                <TextBox VerticalAlignment="Top" Grid.Row="1" Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Stretch" Height="25" FontSize="15" VerticalContentAlignment="Center" Width="Auto" BorderThickness="1" BorderBrush="Black">
                <i:Interaction.Behaviors>
                        <behaviors:FocusNextElementBehaviors />
                    </i:Interaction.Behaviors>
                </TextBox>

                <ListView Grid.Row="2" x:Name="ListView" ItemsSource="{Binding Items}" 
                      DisplayMemberPath="Description" 
                      SelectedValuePath="Value"
                      SelectedItem="{Binding SelectedItem}"
                      VerticalAlignment="Stretch">
                    <ListView.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding SelectItemCommand}" CommandParameter="{Binding ElementName=ListView, Path=SelectedValue}"/>
                        <!--<MouseBinding MouseAction="LeftDoubleClick" Gesture="LeftDoubleClick" Command="{Binding SelectItemCommand}" CommandParameter="{Binding Path=SelectedItem}"/>-->
                    </ListView.InputBindings>
                    <ListView.ItemTemplate>
                        <DataTemplate x:Name="DataTemplate" DataType="{x:Type tools:CustomItem}">
                            <Border x:Name="Border">
                                <TextBlock x:Name="TextBlock" Text="{Binding Description}" />
                            </Border>
                            <DataTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="TextBlock" Property="Foreground" Value="White"/>
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border x:Name="Border">
                                            <Border.InputBindings>
                                                <MouseBinding MouseAction="LeftDoubleClick" 
                                              Command="{Binding Path= DataContext.SelectItemCommand, ElementName=ListView}" 
                                              CommandParameter="{Binding Path=Value}"/>
                                            </Border.InputBindings>
                                            <ContentPresenter
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="#FF9903"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="#FF9903"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                    </ListView.ItemContainerStyle>
                </ListView>
            </Grid>
            <controls:WaitingCover Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibilityConverter}}"/>
        </Grid>
    </DataTemplate>
</ResourceDictionary>