<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:converters1="clr-namespace:Xceed.Wpf.AvalonDock.Converters"
                    xmlns:xcad="clr-namespace:Xceed.Wpf.AvalonDock.Controls"
                    xmlns:avalonDock="clr-namespace:Xceed.Wpf.AvalonDock"
                    xmlns:shell="clr-namespace:Microsoft.Windows.Shell"
                    xmlns:avalonDockProperties="clr-namespace:Xceed.Wpf.AvalonDock.Properties"
                    xmlns:behaviors="clr-namespace:Xceed.Wpf.AvalonDock.ExtendedAvalonDock.Behaviors"
                    xmlns:controls="clr-namespace:Xceed.Wpf.AvalonDock.ExtendedAvalonDock.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/ResourceLibrary;component/Resources/ContextMenus.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <SolidColorBrush x:Key="AvalonDockDefaultTabBackgroundBrush" Color="#4B5153"/>
    <SolidColorBrush x:Key="AvalonDockDefaultTabContentBackgroundBrush" Color="#3F4546"/>
    <SolidColorBrush x:Key="AvalonDockDefaultTabBorderBrush" Color="#3F4546"/>
    <SolidColorBrush x:Key="DockingManagerBackgroundBrush" Color="#13171a"/>
    <SolidColorBrush x:Key="FloatingWindowBackgroundBrush" Color="#1B2024"/>
    <system:Double x:Key="AnchorablePaneTabItemHeight">22</system:Double>

    <Style x:Key="PinAutoHideButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image x:Name="Image" Source="/ResourceLibrary;component/Resources/Images/PinButton/Pin_Standard_Icon.png" Width="7" Height="9" RenderOptions.BitmapScalingMode="NearestNeighbor" RenderOptions.EdgeMode="Aliased"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Image" Property="Source" Value="/ResourceLibrary;component/Resources/Images/PinButton/Pin_Mouseover_Icon.png"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Image" Property="Source" Value="/ResourceLibrary;component/Resources/Images/PinButton/Pin_Pressed_Icon.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="BackgroundBrush" Color="#535659" />
    <SolidColorBrush x:Key="TabItemBackgroundBrush" Color="#1B2024" />
    <SolidColorBrush x:Key="TabItemBackgroundLightBrush" Color="#717476" />
    <SolidColorBrush x:Key="TabItemForegroundBrush" Color="#5E636A" />

    <converters1:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <converters1:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>

    <ContextMenu x:Key="AnchorableContextMenu">
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_Float}" 
                Command="{Binding Path=LayoutElement.FloatCommand}" CommandParameter="{Binding Path=DataContext}"/>
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_Dock}" 
                Command="{Binding Path=LayoutElement.DockCommand}" CommandParameter="{Binding Path=DataContext}"/>
        <!--<MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_DockAsDocument}" 
                Command="{Binding Path=DockAsDocumentCommand}"/>-->
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_Hide}" 
                Command="{Binding Path=AutoHideCommand}"/>
        <!--<MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_AutoHide}" 
                Command="{Binding Path=AutoHideCommand}"/>-->
        <!--<MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_Hide}" 
                Command="{Binding Path=HideCommand}"
                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>-->
    </ContextMenu>

    <DataTemplate x:Key="AnchorableTitleTemplate">
        <TextBlock x:Name="AnchorableTitleTextBlock" TextTrimming="CharacterEllipsis" Text="{Binding Title}"/>
    </DataTemplate>

    <LinearGradientBrush x:Key="ResizeGripperForeground" EndPoint="1,0.75" StartPoint="0,0.25">
        <GradientStop Color="#FFFFFF" Offset="0.3"/>
        <GradientStop Color="#4A482D" Offset="0.75"/>
        <GradientStop Color="#4A482D" Offset="1"/>
    </LinearGradientBrush>
    <DrawingBrush x:Key="DrawingBrushValue" TileMode="Tile" Viewbox="0,0,3,3" Viewport="0,0,3,3" ViewportUnits="Absolute" ViewboxUnits="Absolute">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="{StaticResource ResizeGripperForeground}" Geometry="M 0,0 L 2,0 L 2,2 L 0,2 z "/>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <Style x:Key="ResizePathStyle" TargetType="Path">
        <Setter Property="Data" Value="M 6,0 L 8,0 L 8,8 L 0,8 L 0,6 L 0,6 L 0,6 L 3,6 L 3,3 L 6,3 z" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Margin" Value="0,0,1,1" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Fill" Value="{StaticResource DrawingBrushValue}"/>
    </Style>
    <Style x:Key="ResizeSinglePathStyle" TargetType="Path" BasedOn="{StaticResource ResizePathStyle}">
        <Setter Property="Data" Value="M 0,0 L 2,0 L 2,2 L 0,2 L 0,0 z" />
    </Style>
    <Style x:Key="ResizeGridStyle" TargetType="{x:Type Grid}">
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
    </Style>

    <Style x:Key="{x:Type xcad:OverlayWindow}" TargetType="{x:Type xcad:OverlayWindow}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:OverlayWindow}">
                    <Canvas x:Name="PART_DropTargetsContainer" Opacity="0.9">
                        <Path x:Name="PART_PreviewBox" Fill="AliceBlue" StrokeThickness="2" Stroke="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        <Grid x:Name="PART_DockingManagerDropTargets" >
                            <Image x:Name="PART_DockingManagerDropTargetLeft" VerticalAlignment="Center" HorizontalAlignment="Left" Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/DockLeft.PNG" Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetRight" VerticalAlignment="Center" HorizontalAlignment="Right" Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/DockRight.PNG" Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetBottom" VerticalAlignment="Bottom" HorizontalAlignment="Center" Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/DockBottom.PNG" Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetTop" VerticalAlignment="Top" HorizontalAlignment="Center" Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/DockTop.PNG" Stretch="None"/>
                        </Grid>
                        <Grid x:Name="PART_AnchorablePaneDropTargets">
                            <Grid Width="88" Height="88" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Image Grid.ColumnSpan="3" Grid.RowSpan="3" Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/DockPaneEmpty.PNG"  Stretch="Uniform"/>
                                <Border Name="PART_AnchorablePaneDropTargetTop" Grid.Column="1" Grid.Row="0">
                                    <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/InnerDockPaneTop.png"  Stretch="None"/>
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetRight" Grid.Column="2" Grid.Row="1">
                                    <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/InnerDockPaneRight.png"  Stretch="None"/>
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetBottom" Grid.Column="1" Grid.Row="2">
                                    <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/InnerDockPaneBottom.png"  Stretch="None"/>
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetLeft" Grid.Column="0" Grid.Row="1">
                                    <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/InnerDockPaneLeft.png"  Stretch="None"/>
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetInto" Grid.Column="1" Grid.Row="1">
                                    <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/InnerDockPaneInside.png"  Stretch="None"/>
                                </Border>
                            </Grid>
                        </Grid>
                        <Grid x:Name="PART_DocumentPaneDropTargets">
                            <Grid Width="88" Height="88" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Image Grid.ColumnSpan="3" Grid.RowSpan="3" Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/DockPaneEmpty.PNG"  Stretch="Uniform"/>
                                <Border Name="PART_DocumentPaneDropTargetTop" Grid.Column="1" Grid.Row="0">
                                    <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/InnerDockDocPaneTop.png"  Stretch="None"/>
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetRight" Grid.Column="2" Grid.Row="1">
                                    <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/InnerDockDocPaneRight.png"  Stretch="None"/>
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetBottom" Grid.Column="1" Grid.Row="2">
                                    <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/InnerDockDocPaneBottom.png"  Stretch="None"/>
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetLeft" Grid.Column="0" Grid.Row="1">
                                    <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/InnerDockDocPaneLeft.png"  Stretch="None"/>
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetInto" Grid.Column="1" Grid.Row="1">
                                    <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/InnerDockPaneInside.png"  Stretch="None"/>
                                </Border>
                            </Grid>
                        </Grid>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=PART_DockingManagerDropTargets, Path=IsVisible}" Value="True">
                            <Setter TargetName="PART_DocumentPaneDropTargets" Property="MaxWidth" Value="0"/>
                            <Setter TargetName="PART_DocumentPaneDropTargets" Property="MaxHeight" Value="0"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type xcad:LayoutDocumentFloatingWindowControl}" TargetType="{x:Type xcad:LayoutDocumentFloatingWindowControl}">
        <Setter Property="Background" Value="#F5F5F5"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="MinWidth" Value="500"/>
        <Setter Property="MinHeight" Value="400"/>
        <Setter Property="Title" Value="{Binding RelativeSource={RelativeSource Self}, Path=Model.RootDocument.Title}"/>
        <Setter Property="behaviors:WindowInputBindingsBehavior.IsWindowHasOwner" Value="False"/>
        <Setter Property="behaviors:WindowInputBindingsBehavior.WindowCloseCommand" Value="{Binding Path=RootDocumentLayoutItem.CloseCommand, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="behaviors:WindowInputBindingsBehavior.WindowCloseKeyGesture" Value="Alt+F4"/>
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome
                    ResizeBorderThickness="4"
                    CaptionHeight="{StaticResource AnchorablePaneTabItemHeight}"
                    CornerRadius="3"
                    GlassFrameThickness="0"
                    ShowSystemMenu="True"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutDocumentFloatingWindowControl}">
                    <Grid>
                        <Border x:Name="WindowBorder" Background="{StaticResource FloatingWindowBackgroundBrush}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="Border" Padding="8 0" VerticalAlignment="Center" Height="{StaticResource AnchorablePaneTabItemHeight}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <ContentPresenter Name="PART_TitlePresenter" Content="{Binding Model.RootDocument, RelativeSource={RelativeSource TemplatedParent}}"
                                                          ContentTemplate="{Binding Model.Root.Manager.DocumentTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                          ContentTemplateSelector="{Binding Model.Root.Manager.DocumentTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                                          TextBlock.Foreground="#ACB3BC" VerticalAlignment="Center" Margin="1 0 1 1"/>
                                        <Button shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                        Focusable="False"
                                        Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                        Style="{DynamicResource WindowStyleMaximizeTitleBarButton}"
                                        Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                        ToolTip="{x:Static avalonDockProperties:Resources.Window_Maximize}"
                                                Margin="3 0"
                                        Grid.Column="2"/>
                                        <Button shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                        Focusable="False"
                                        Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                        Style="{DynamicResource WindowStyleMaximizeTitleBarButton}"
                                        Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                        ToolTip="{x:Static avalonDockProperties:Resources.Window_Restore}"
                                                Margin="3 0"
                                        Grid.Column="2"/>
                                        <Button shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Focusable="False"
                                            Style="{DynamicResource WindowStyleCloseTitleBarButton}"
                                            Command="{Binding Path=RootDocumentLayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}"
                                            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                            Margin="3 0" Grid.Column="3">
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Content}" Grid.Row="1" Margin="3 0 3 3"/>
                                <!--we need to disable PopupEvalContentControl, because it gave focus when we use buttons left, right, top or bottom, so as we dont need PopupEvalContentControl (it only need for popups), so we can disable it-->
                                <ContentControl Grid.Row="1" x:Name="PopupEvalContentControl" IsEnabled="False" Content="{Binding ElementName=ContentPresenter, Path=Content.Content.Model.Content.ToolsPanel.ParametersPopup}"/>
                                <Grid Grid.Row="0" Grid.RowSpan="2" Style="{StaticResource ResizeGridStyle}">
                                    <Path Style="{StaticResource ResizePathStyle}"/>
                                </Grid>
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect Color="Black" Direction="0" BlurRadius="7" Opacity=".35" RenderingBias="Quality"/>
                            </Border.Effect>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Margin" Value="0" TargetName="ContentPresenter"/>
                            <Setter Property="Padding" Value="7" TargetName="WindowBorder"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.RootDocument.IsLastFocusedDocument}" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#FF9901"/>
                            <Setter TargetName="PART_TitlePresenter" Property="TextBlock.Foreground" Value="Black"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.RootDocument.IsLastFocusedDocument}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.RootDocument.Content.Parent.IsAvalonEditor}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="WindowBorder" Property="Background" Value="#FFEBF2FB"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type xcad:LayoutAnchorableFloatingWindowControl}" TargetType="{x:Type xcad:LayoutAnchorableFloatingWindowControl}">
        <Setter Property="Background" Value="#F5F5F5"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="MinHeight" Value="200"/>
        <Setter Property="Title" Value="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.Title}"/>
        <Setter Property="behaviors:WindowInputBindingsBehavior.IsWindowHasOwner" Value="False"/>
        <Setter Property="behaviors:WindowInputBindingsBehavior.WindowCloseCommand" Value="{x:Null}"/>
        <Setter Property="behaviors:WindowInputBindingsBehavior.WindowCloseKeyGesture" Value="Alt+F4"/>
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome
                    ResizeBorderThickness="4"
                    CaptionHeight="{StaticResource AnchorablePaneTabItemHeight}"
                    CornerRadius="3"
                    GlassFrameThickness="0"
                    ShowSystemMenu="True"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutAnchorableFloatingWindowControl}">
                    <Grid>
                        <Border x:Name="WindowBorder" Background="{StaticResource FloatingWindowBackgroundBrush}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="Border" Padding="8 0" VerticalAlignment="Center" Height="{StaticResource AnchorablePaneTabItemHeight}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Border Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <xcad:DropDownControlArea DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                                      DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ContentPresenter Name="PART_TitlePresenter"
                                                                  Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                  ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                                  ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                                                  TextBlock.Foreground="#ACB3BC" VerticalAlignment="Center" Margin="1 0 1 1"/>
                                            </xcad:DropDownControlArea>
                                        </Border>
                                        <Button shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                                Focusable="False"
                                                Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                                Style="{DynamicResource WindowStyleMaximizeTitleBarButton}"
                                                Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                ToolTip="{x:Static avalonDockProperties:Resources.Window_Maximize}"
                                                Margin="3 0"
                                                Grid.Column="2"/>
                                        <Button shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                                Focusable="False"
                                                Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                                Style="{DynamicResource WindowStyleMaximizeTitleBarButton}"
                                                Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                ToolTip="{x:Static avalonDockProperties:Resources.Window_Restore}"
                                                Margin="3 0"
                                                Grid.Column="2"/>
                                        <!--<Button shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                                Focusable="False"
                                                Style="{DynamicResource WindowStyleCloseTitleBarButton}"
                                                Command="{Binding HideWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}"
                                                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                                Margin="3 0"
                                                Grid.Column="3">
                                        </Button>-->
                                    </Grid>
                                </Border>
                                <ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Content}" Grid.Row="1" Margin="3 0 3 3"/>
                                <Grid Grid.Row="0" Grid.RowSpan="2" Style="{StaticResource ResizeGridStyle}">
                                    <Path Style="{StaticResource ResizePathStyle}"/>
                                </Grid>
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect Color="Black" Direction="0" BlurRadius="7" Opacity=".35" RenderingBias="Quality"/>
                            </Border.Effect>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Margin" Value="0" TargetName="ContentPresenter"/>
                            <Setter Property="Padding" Value="7" TargetName="WindowBorder"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="WindowBorder"  Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsActive}" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#FF9901"/>
                            <Setter TargetName="PART_TitlePresenter" Property="TextBlock.Foreground" Value="Black"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ContextMenu x:Key="DocumentContextMenu" Style="{StaticResource {x:Type ContextMenu}}">
        <MenuItem Header="Close" Command="{Binding Path=CloseCommand}"/>
        <MenuItem Header="Close All but this" Command="{Binding Path=CloseAllButThisCommand}" Visibility="{Binding Path=View.DataContext.IsCloseAllButThisVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
        <MenuItem Header="Save" Command="{Binding Path=SaveCommand}" Visibility="{Binding View.DataContext.IsSaveVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
        <MenuItem Header="Save All" Command="{Binding Path=SaveAllCommand}"  Visibility="{Binding View.DataContext.IsSaveAllVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
    </ContextMenu>

    <Style TargetType="{x:Type xcad:LayoutGridResizerControl}">
        <!--don't use margin or width property, because this control chained with GridSplitter which width defined as GridSplitterWidth
        and so if you want to change margin you must be careful, this is cause the exception in case when GridSplitter collapsed, and your 
        LayoutGridResizerControl is active, because it has not correct margin and so it is visible on gui-->
        <Setter Property="OpacityWhileDragging" Value="0.1"/>
        <Setter Property="Background" Value="{StaticResource DockingManagerBackgroundBrush}"/>
        <!--<Style.Triggers>
            <Trigger Property="ActualWidth" Value="0.001">
                <Setter Property="Margin" Value="-2 0 -2 0"/>
            </Trigger>
            <Trigger Property="ActualWidth" Value="4.001">
                <Setter Property="Margin" Value="-2 0 -2 0"/>
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <converters1:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter"/>

    <Style TargetType="{x:Type xcad:LayoutDocumentControl}">
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="MinHeight" Value="200"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutDocumentControl}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <controls:ExtendedLayoutContentPresenter Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                   IsFloating="{Binding RelativeSource={RelativeSource Self}, Path=Content.DataContext.IsFloating, Mode=OneWayToSource}"
                                                                   CanFloat="{Binding RelativeSource={RelativeSource Self}, Path=Content.DataContext.CanFloat, Mode=OneWay}"
                                                                   TextElement.FontSize="{TemplateBinding FontSize}"/>
                        </Border>
                        <Path x:Name="ResizeSinglePath" Style="{StaticResource ResizeSinglePathStyle}" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.LayoutFloatingWindowControl.IsMaximized}" Value="False">
                            <Setter TargetName="ResizeSinglePath" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="AnchorTemplate" TargetType="{x:Type xcad:LayoutAnchorControl}">
        <controls:ExtendedLayoutBorder
            x:Name="Border"
            IsShowAnchorOnMouseOver="False"
            Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type xcad:LayoutAnchorControl}}, Path=Model.IsLayoutVisible, Converter={StaticResource BoolToVisibilityConverter}}"
            LayoutAnchorControl="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type xcad:LayoutAnchorControl}}}"
            BorderThickness="0" 
            Background="Transparent"
            CornerRadius="0"
            Margin="0 2 2 2"
            Padding="2">
            <ContentPresenter Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" 
                              TextBlock.Foreground="#ACB3BC"
                              ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                              ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"/>
        </controls:ExtendedLayoutBorder>
    </ControlTemplate>

    <Style x:Key="MenuDropdownImageStyle" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
        <Setter Property="Source" Value="../Images/ShowMore/ShowMore_Icon_Standard.png"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type xcad:DropDownButton}}, Path=IsPressed}" Value="True">
                <Setter Property="Source" Value="../Images/ShowMore/ShowMore_Icon_Pressed.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type xcad:DropDownButton}}, Path=IsMouseOver}" Value="True">
                <Setter Property="Source" Value="../Images/ShowMore/ShowMore_Icon_Mouseover.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type xcad:DropDownButton}}, Path=IsChecked}" Value="True">
                <Setter Property="Source" Value="../Images/ShowMore/ShowMore_Icon_Pressed.png"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MenuDropdownToggleButtonStyle" TargetType="{x:Type xcad:DropDownButton}" >
        <Setter Property="Margin" Value="0 0 2 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:DropDownButton}">
                    <Image Style="{StaticResource MenuDropdownImageStyle}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type xcad:LayoutItem}">
        <Setter Property="Title" Value="{Binding Model.Title}" />
        <Setter Property="ToolTip" Value="{Binding Model.Description}"/>
        <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
        <Setter Property="CanClose" Value="{Binding Model.CanClose}" />
        <Setter Property="CanFloat" Value="{Binding Model.CanFloat}"/>
        <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
        <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
    </Style>


    <Style TargetType="{x:Type controls:ExtendedDockingManager}">
        <Setter Property="Background" Value="{StaticResource DockingManagerBackgroundBrush}"/>
        <Setter Property="AnchorTemplate" Value="{StaticResource AnchorTemplate}"/>
        <Setter Property="AnchorableTitleTemplate" Value="{StaticResource AnchorableTitleTemplate}"/>
        <Setter Property="GridSplitterWidth" Value="3"/>
        <Setter Property="GridSplitterHeight" Value="3"/>
        <Setter Property="DocumentContextMenu" Value="{StaticResource DocumentContextMenu}"/>
        <Setter Property="AnchorableContextMenu" Value="{StaticResource AnchorableContextMenu}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ExtendedDockingManager}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid FlowDirection="LeftToRight" Margin="0 4 0 0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Content="{TemplateBinding LayoutRootPanel}" Grid.Column="1" Grid.Row="1"/>
                            <ContentPresenter Content="{TemplateBinding RightSidePanel}" Grid.Column="2" Grid.Row="1"/>
                            <ContentPresenter Content="{TemplateBinding LeftSidePanel}" Grid.Column="0" Grid.Row="1"/>
                            <ContentPresenter Content="{TemplateBinding TopSidePanel}" Grid.Column="1" Grid.Row="0"/>
                            <!--<ContentPresenter Content="{TemplateBinding BottomSidePanel}" Grid.Column="1" Grid.Row="2"/>-->
                            <ContentPresenter 
                                x:Name="PART_AutoHideArea"
                                Content="{TemplateBinding AutoHideWindow}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DocumentPaneControlStyle">
            <Setter.Value>
                <Style TargetType="{x:Type xcad:LayoutDocumentPaneControl}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type xcad:LayoutDocumentPaneControl}">
                                <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Border Background="{StaticResource DockingManagerBackgroundBrush}" Grid.Row="0" Grid.RowSpan="2"/>
                                    <Grid Panel.ZIndex="0" Grid.Row="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <xcad:DocumentPaneTabPanel x:Name="HeaderPanel" 
                                                                   Grid.Column="0" 
                                                                   FlowDirection="LeftToRight" 
                                                                   IsItemsHost="True" 
                                                                   Grid.Row="0" Background="Red"
                                                                   KeyboardNavigation.TabIndex="1"/>
                                        <xcad:DropDownButton x:Name="MenuDropDownButton"
                                                             Background="#343A3D"
                                                             Style="{StaticResource MenuDropdownToggleButtonStyle}"
                                                             Focusable="False"
                                                             Grid.Column="1">
                                            <xcad:DropDownButton.DropDownContextMenu>
                                                <xcad:ContextMenuEx ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource {x:Type ContextMenu}}">
                                                    <xcad:ContextMenuEx.ItemContainerStyle>
                                                        <Style TargetType="{x:Type xcad:MenuItemEx}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                                            <Setter Property="HeaderTemplate" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}"/>
                                                            <Setter Property="HeaderTemplateSelector" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}"/>
                                                            <Setter Property="IconTemplate" Value="{Binding Path=Root.Manager.IconContentTemplate}"/>
                                                            <Setter Property="IconTemplateSelector" Value="{Binding Path=Root.Manager.IconContentTemplateSelector}"/>
                                                            <Setter Property="Command" Value="{Binding Path=., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}"/>
                                                        </Style>
                                                    </xcad:ContextMenuEx.ItemContainerStyle>
                                                </xcad:ContextMenuEx>
                                            </xcad:DropDownButton.DropDownContextMenu>
                                        </xcad:DropDownButton>
                                        <!--Button Margin="4,1,0,0" 
                                                x:Name="AddButton"
                                                Template="{DynamicResource AddButtonTemplate}"
                                                Width="18"
                                                Height="18"
                                                Grid.Column="1" 
                                                HorizontalAlignment="Left" 
                                                VerticalAlignment="Top" 
                                                Command="ApplicationCommands.New">
                                        </-->
                                    </Grid>
                                    <Border BorderThickness="1, 0, 1, 1" 
                                                    Background="{StaticResource BackgroundBrush}" 
                                                    Grid.Column="0"
                                                    HorizontalAlignment="Stretch" 
                                                    Grid.Row="1" 
                                                    VerticalAlignment="Stretch">
                                    </Border>
                                    <Border x:Name="ContentPanel" 
                                            BorderThickness="0 2 0 0" 
                                            BorderBrush="{StaticResource BackgroundBrush}"
                                            Grid.Column="0"
                                            KeyboardNavigation.DirectionalNavigation="Contained" 
                                            HorizontalAlignment="Stretch" 
                                            Grid.Row="1" 
                                            KeyboardNavigation.TabIndex="2" 
                                            KeyboardNavigation.TabNavigation="Cycle" 
                                            VerticalAlignment="Stretch">
                                        <ContentPresenter x:Name="PART_SelectedContentHost" 
                                                          ContentTemplate="{TemplateBinding SelectedContentTemplate}" Content="{TemplateBinding SelectedContent}" 
                                                          ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" 
                                                          ContentSource="SelectedContent" 
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                    <!--<ContentPresenter x:Name="BottomCenterContentPresenter" Grid.Column="0" Grid.Row="2" Content="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type avalonDock:DockingManager}}, Path=BottomSidePanel}"/>-->
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding Model.ChildrenCount, RelativeSource={RelativeSource Self}}" Value="0">
                                        <!--Setter Property="Visibility" TargetName="MenuDropDownButton" Value="Collapsed"/-->
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem.Title}" Value="Get Started">
                                        <Setter TargetName="ContentPanel" Property="BorderBrush" Value="#343A3D"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem.Content.SurfaceBackground}" Value="TileLightBrush">
                                        <Setter TargetName="ContentPanel" Property="BorderBrush" Value="{StaticResource TabItemBackgroundLightBrush}"/>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type TabItem}">
                                <Setter Property="Height" Value="22"/>
                                <Setter Property="Background" Value="{StaticResource TabItemBackgroundBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource TabItemForegroundBrush}"/>
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                                <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TabItem}">
                                            <Grid SnapsToDevicePixels="true">
                                                <Border Padding="6 1 4 1" CornerRadius="3 3 0 0"  x:Name="TabItemBd" Background="{TemplateBinding Background}">
                                                    <ContentPresenter x:Name="Content" 
                                                                      ContentSource="Header" 
                                                                      HorizontalAlignment="Stretch" 
                                                                      VerticalAlignment="Center"
                                                                      RecognizesAccessKey="True" 
                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Border>
                                                <Border x:Name="ShadowBorder"  Background="#21262B" VerticalAlignment="Bottom" Height="3"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="Selector.IsSelected" Value="true">
                                                    <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
                                                    <Setter TargetName="ShadowBorder" Property="Visibility" Value="Collapsed" />
                                                    <Setter TargetName="ShadowBorder" Property="Background" Value="#1B2024" />
                                                    <Setter Property="Panel.ZIndex" Value="0" />
                                                    <Setter Property="Foreground" Value="#ACB3BC" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                </Trigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.Content.SurfaceBackground}" Value="TileLightBrush"/>
                                                        <Condition Binding="{Binding IsSelected}" Value="true"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="{StaticResource TabItemBackgroundLightBrush}"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Title}" Value="Get Started"/>
                                                        <Condition Binding="{Binding IsSelected}" Value="true"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="#343A3D"/>
                                                    <!--<Setter TargetName="ShadowBorder" Property="Background" Value="#343A3D"/>-->
                                                </MultiDataTrigger>
                                                <DataTrigger Binding="{Binding Title}" Value="Get Started">
                                                    <Setter Property="ToolTip" Value="{x:Null}"/>
                                                </DataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <xcad:LayoutDocumentTabItem Model="{Binding}" />
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <xcad:LayoutDocumentControl Model="{Binding}" />
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="AnchorablePaneControlStyle">
            <Setter.Value>
                <Style TargetType="{x:Type xcad:LayoutAnchorablePaneControl}">
                    <Setter Property="Foreground" Value="#ACB3BC"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="TabStripPlacement" Value="Bottom"/>
                    <Setter Property="Background" Value="#1B2024"/>
                    <Setter Property="BorderBrush" Value="#3E3E3E"/>
                    <Setter Property="BorderThickness" Value="0 0 0 0"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="behaviors:PaneControlSelectionItemBehavior.ExtendPaneControlSelection" Value="True"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type xcad:LayoutAnchorablePaneControl}">
                                <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Border Background="#1b2024" Grid.RowSpan="2"/>
                                    <Border x:Name="ConAnchorablePaneControlStyletentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="0" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Cycle">
                                        <ContentPresenter x:Name="PART_SelectedContentHost" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Content="{TemplateBinding SelectedContent}" ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                    <controls:ExtendedAnchorablePaneTabPanel x:Name="HeaderPanel" Background="Yellow" FlowDirection="LeftToRight" IsItemsHost="True" Margin="0" Grid.Row="1" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
                                    <Path x:Name="ResizeSinglePath" Grid.Row="0" Grid.RowSpan="2" Style="{StaticResource ResizeSinglePathStyle}" Visibility="Collapsed"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type AdornerDecorator}}, Path=Child.Model.Parent.LayoutFloatingWindowControl.IsMaximized}" Value="False"/>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsLastElement}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="ResizeSinglePath" Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemContainerStyle">
                        <Setter.Value>
                            <!--Style TargetType="{x:Type TabItem}">
                                <Setter Property="Background" Value="#4D4D4D"/>
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                                <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="1">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </-->
                            <Style TargetType="{x:Type TabItem}">
                                <Setter Property="Height" Value="{StaticResource AnchorablePaneTabItemHeight}"/>
                                <Setter Property="Background" Value="#1B2024"/>
                                <Setter Property="Foreground" Value="{StaticResource TabItemForegroundBrush}"/>
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                                <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="BorderBrush" Value="#A0A0A0"/>
                                <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.IsLayoutVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TabItem}">
                                            <Grid SnapsToDevicePixels="true">
                                                <Border Padding="0" CornerRadius="4 4 0 0"  x:Name="Bd" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                                    <ContentPresenter x:Name="Content" 
                                                                      ContentSource="Header" 
                                                                      HorizontalAlignment="Stretch" 
                                                                      VerticalAlignment="Stretch"
                                                                      RecognizesAccessKey="True" 
                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Border>
                                                <!--Border x:Name="ShadowBorder"  Background="#717171" VerticalAlignment="Bottom" Height="3"/-->
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="Selector.IsSelected" Value="true">
                                                    <Setter Property="Background" Value="{StaticResource AvalonDockDefaultTabContentBackgroundBrush}" />
                                                    <!--Setter TargetName="ShadowBorder" Property="Visibility" Value="Collapsed" /-->
                                                    <Setter Property="Panel.ZIndex" Value="0" />
                                                    <Setter Property="Foreground" Value="#ACB3BC" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                </Trigger>
                                                <Trigger Property="Visibility" Value="Collapsed">
                                                    <Setter Property="IsSelected" Value="False"/>
                                                </Trigger>
                                                <DataTrigger Binding="{Binding TitleContent}" Value="{x:Null}">
                                                    <Setter TargetName="Bd" Property="Padding" Value="6 4"/>
                                                </DataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <xcad:LayoutAnchorableTabItem Model="{Binding}" />
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <xcad:LayoutAnchorableControl Model="{Binding}" />
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="DocumentHeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid ToolTip="{Binding DataContext.Content.Tooltip, RelativeSource={RelativeSource TemplatedParent}}">
                        <TextBlock x:Name="DocumentText" Text="{Binding DataContext.Content.Title, RelativeSource={RelativeSource TemplatedParent}}" Foreground="#ACB3BC" />
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}" Value="False">
                            <Setter TargetName="DocumentText" Property="Foreground" Value="#ACB3BC"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Title}" Value="Get Started"/>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DocumentText" Property="Foreground" Value="#ACB3BC"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.Content.SurfaceBackground}" Value="TileLightBrush"/>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DocumentText" Property="Foreground" Value="#D4D9E0"/>
                        </MultiDataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type xcad:NavigatorWindow}">
        <Setter Property="Background" Value="#3F4548"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="MinWidth" Value="0"/>
        <!--<Setter Property="FontSize" Value="{Binding Path=(FontsBehavior.Instance).GlobalLargeFontSizes}"/>-->
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome
                    ResizeBorderThickness="10"
                    CaptionHeight="16"
                    CornerRadius="3,3,3,3"
                    GlassFrameThickness="4"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:NavigatorWindow}">
                    <Grid>
                        <Border x:Name="WindowBorder" BorderThickness="1"
                                Background="#3F4548"
                                BorderBrush="Black">
                            <Grid Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <!--<TextBlock Text="Active Files" FontWeight="Bold" Margin="0,3,0,4"/>-->
                                <ListBox Name="ActiveFilesListBox" Grid.Row="1" ItemsSource="{Binding Documents}" Margin="-2 0 0 0" SelectedItem="{Binding SelectedDocument, Mode=TwoWay}" Background="Transparent" BorderThickness="0" MaxHeight="400" FocusVisualStyle="{x:Null}">
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem">
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Grid x:Name="Grid">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock x:Name="DocumentNameTxt" Foreground="White" Text="{Binding LayoutElement.Title}" TextTrimming="CharacterEllipsis" Grid.Column="1" Margin="2"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="ListBoxItem.IsSelected" Value="True">
                                                                <Setter TargetName="DocumentNameTxt" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                                <Setter TargetName="DocumentNameTxt" Property="Foreground" Value="Black"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel Orientation="Vertical"/>
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <!--<i:Interaction.Behaviors>
                                        <behaviors11:ListBoxSelectionBringIntoViewBehavior/>
                                    </i:Interaction.Behaviors>-->
                                </ListBox>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=ActiveFilesListBox, Path=Items.Count}" Value="1">
                            <Setter TargetName="WindowBorder" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type xcad:LayoutAutoHideWindowControl}" TargetType="{x:Type xcad:LayoutAutoHideWindowControl}">
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="Background" Value="#1B2024"/>
    </Style>

    <Style TargetType="{x:Type xcad:LayoutAnchorableControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutAnchorableControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            KeyboardNavigation.TabNavigation="Cycle">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="Header" BorderThickness="0 0 0 1" BorderBrush="{StaticResource AvalonDockDefaultTabBorderBrush}">
                                <Border BorderThickness="0 0 0 0" BorderBrush="#555555">
                                    <xcad:AnchorablePaneTitle Model="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Border>
                            </Border>

                            <ContentPresenter Grid.Row="1"
                                              Margin="0 0 0 0"
                                              FlowDirection="{TemplateBinding FlowDirection}"
                                              Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Header"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsLayoutVisible}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="{x:Type xcad:AnchorablePaneTitle}">
        <Setter Property="Height" Value="{StaticResource AnchorablePaneTabItemHeight}"/>
        <Setter Property="Background" Value="{StaticResource AvalonDockDefaultTabBackgroundBrush}"/>
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="TopBorder"  Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border x:Name="BottomBorder">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <xcad:DropDownControlArea>
                                    <ContentPresenter Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" 
                                                  Margin="7, 1, 0, 0"
                                                  ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                                  VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="FontFamily" Value="Verdana" />
                                                <Setter Property="FontWeight" Value="Light" />
                                                <Setter Property="Foreground" Value="#ACB3BC" />
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                </xcad:DropDownControlArea>

                                -->
    <!--Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"-->
    <!--
                                <Button x:Name="PART_AutoHidePin" 
                                    UseLayoutRounding="True"
                                    Focusable="False"
                                    Margin="0 0 4 0"
                                    Grid.Column="2" 
                                    Style="{StaticResource PinAutoHideButtonStyle}"
                                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                    Command="{Binding Path=AutoHideCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedDockingManager}}}" 
                                    CommandParameter="{Binding Path=Model, RelativeSource={RelativeSource TemplatedParent}}"
                                    ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnAutoHide_Hint}">
                                    -->
    <!--Image Width="13" Height="13" Source="pack://application:,,,/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/PinAutoHide.png"/-->
    <!--
                                </Button>

                                -->
    <!--Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"-->
    <!--
                                <Button x:Name="PART_HidePin" 
                                    Grid.Column="3" 
                                    Focusable="False"
                                    Margin="0 0 4 0"
                                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                    Command="{Binding Path=HideCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedDockingManager}}}" 
                                    CommandParameter="{Binding Path=Model, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{DynamicResource SmallCloseButtonStyle}"
                                    ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}">
                                    -->
    <!--Image Source="pack://application:,,,/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/PinClose.png"/-->
    <!--
                                </Button>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Model.IsAutoHidden, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter Property="LayoutTransform" TargetName="PART_AutoHidePin">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>

                            <Setter TargetName="PART_AutoHidePin" Property="Margin" Value="0 0 4 0"/>
                            <Setter TargetName="TopBorder" Property="BorderThickness" Value="0 0 0 0"/>
                            <Setter TargetName="TopBorder" Property="BorderBrush" Value="#3E3E3E"/>
                            <Setter TargetName="BottomBorder" Property="BorderThickness" Value="0 0 0 0"/>
                            <Setter TargetName="BottomBorder" Property="BorderBrush" Value="#555555"/>
                            <Setter TargetName="TopBorder" Property="Height" Value="{StaticResource AnchorablePaneTabItemHeight}"/>

                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.Children[0].CanHide, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type xcad:LayoutAnchorablePaneControl}}}" Value="False">
                            <Setter TargetName="PART_AutoHidePin" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.CanHide, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type xcad:LayoutAnchorablePaneControl}}}" Value="False">
                            <Setter TargetName="PART_AutoHidePin" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style x:Key="ButtonLayoutDocumentTabItemStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" >
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Margin="{TemplateBinding Padding}" 
                                        RecognizesAccessKey="True" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style TargetType="{x:Type xcad:LayoutDocumentTabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutDocumentTabItem}">
                    <xcad:DropDownControlArea 
                            DropDownContextMenu="{Binding Root.Manager.DocumentContextMenu}"
                            DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}" >
                        <Grid x:Name="grid" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="TabContent" HorizontalAlignment="Left"
                                              Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" 
                                              TextBlock.Foreground="{DynamicResource UnselectedTabText}"
                                              ContentTemplate="{Binding DocumentHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type controls:ExtendedDockingManager}, Mode=FindAncestor}}"
                                              ContentTemplateSelector="{Binding DocumentHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type controls:ExtendedDockingManager}, Mode=FindAncestor}}"
                                              VerticalAlignment="Center">
                            </ContentPresenter>
                            <Button x:Name="TabItemButton" Grid.Column="1" HorizontalAlignment="Right" UseLayoutRounding="True" 
                                    Margin="4 2 0 0"
                                    VerticalAlignment="Center"
                                    Command="{Binding Path=CloseCommand}"
                                    Style="{StaticResource ButtonLayoutDocumentTabItemStyle}">
                                <Image x:Name="CloseImage" Width="9" Height="10" Source="pack://application:,,,/ResourceLibrary;component/Resources/Images/SmallClose/Close_Icon.png" />
                            </Button>
                        </Grid>
                    </xcad:DropDownControlArea>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=TabItemButton}" Value="True">
                            <Setter TargetName="CloseImage" Property="Source" Value="pack://application:,,,/ResourceLibrary;component/Resources/Images/SmallClose/Close_Mouseover.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsPressed, ElementName=TabItemButton}" Value="True">
                            <Setter TargetName="CloseImage" Property="Source" Value="pack://application:,,,/ResourceLibrary;component/Resources/Images/SmallClose/Close_Pressed.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsClosable}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="AnchorableHeaderTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock x:Name="title" Margin="4,0,0,0" Text="{Binding Title}" TextTrimming="CharacterEllipsis" Grid.Column="1"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="AnchorableCustomHeaderTemplate">
        <ContentPresenter Content="{Binding TitleContent}"/>
    </DataTemplate>-->
</ResourceDictionary>